import edu.wpi.first.gradlerio.frc.FRCJavaArtifact
import edu.wpi.first.gradlerio.frc.RoboRIO

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.60'
    id "edu.wpi.first.GradleRIO" version "2018.06.21"
}

def ROBOT_CLASS = "org.team2471.workshop.Robot"

deploy {
    targets {
        target("roborio", RoboRIO) {
            team = getTeamOrDefault(2471)
        }
    }
    artifacts {
        // We still use FRCJavaArtifact since kotlin does respond as a Java build.
        artifact('frcKotlin', FRCJavaArtifact) {
            targets << "roborio"
            // Debug can be overridden by command line, for use with VSCode
            debug = getDebugOrDefault(false)
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile wpilib()
    compile ctre()
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile project("meanlib")
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}